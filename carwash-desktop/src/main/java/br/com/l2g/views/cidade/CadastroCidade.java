/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.l2g.views.cidade;

import br.com.l2g.model.Cidade;
import br.com.l2g.util.Environment;
import br.com.l2g.util.Util;
import java.awt.Frame;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.swing.JOptionPane;
import org.apache.http.HttpException;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;

/**
 *
 * @author Gustavo Steinhoefel
 */
public class CadastroCidade extends javax.swing.JDialog {

    private static final String URL_BASE = Environment.DEV.url();
    private static final String URL_CIDADE  = URL_BASE + "cidade";

    /**
     * Creates new form CadastroCliente
     *
     * @param parent
     * @param modal
     * @param operacao
     */
    public CadastroCidade(Frame parent, boolean modal, String operacao) {
        super(parent, modal);
        initComponents();
        String viewTitulo = operacao.equals("incluir") ? "Cadastro de Cidades" : "Alterar Cidades";
        String botaoTitulo = operacao.equals("incluir") ? "Salvar" : "Alterar";
        this.setTitle(viewTitulo);
        buttonSalvar.setText(botaoTitulo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonSalvar = new javax.swing.JButton();
        buttonCancelar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        nomeText = new javax.swing.JTextField();
        codigoCidadeText = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ufNameText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Clientes");

        buttonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/1480357534_free-05.png"))); // NOI18N
        buttonSalvar.setText("Salvar");
        buttonSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        buttonSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonSalvar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                buttonSalvarFocusGained(evt);
            }
        });
        buttonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSalvarActionPerformed(evt);
            }
        });

        buttonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/1479862814_Cancel.png"))); // NOI18N
        buttonCancelar.setText("Cancelar");
        buttonCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        buttonCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonCancelar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                buttonCancelarFocusGained(evt);
            }
        });
        buttonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarActionPerformed(evt);
            }
        });

        jLabel3.setText("*Nome Cidade:");

        nomeText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nomeTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nomeTextFocusLost(evt);
            }
        });

        codigoCidadeText.setEditable(false);
        codigoCidadeText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("######"))));
        codigoCidadeText.setEnabled(false);
        codigoCidadeText.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        codigoCidadeText.setFocusable(false);

        jLabel10.setText("*Codigo:");

        jLabel4.setText("*Nome da UF:");

        ufNameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ufNameTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ufNameTextFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(buttonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(buttonCancelar))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(nomeText, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(codigoCidadeText, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel4)
                    .addComponent(ufNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(codigoCidadeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ufNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonSalvar))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSalvarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_buttonSalvarFocusGained
        //
    }//GEN-LAST:event_buttonSalvarFocusGained

    private void buttonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSalvarActionPerformed
        salvarCidade();
    }//GEN-LAST:event_buttonSalvarActionPerformed

    private void buttonCancelarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_buttonCancelarFocusGained
        //
    }//GEN-LAST:event_buttonCancelarFocusGained

    private void buttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCancelarActionPerformed

    private void nomeTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomeTextFocusGained
        nomeText.selectAll();
    }//GEN-LAST:event_nomeTextFocusGained

    private void nomeTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomeTextFocusLost
        if (nomeText.getText().trim().length() > 60) {
            JOptionPane.showMessageDialog(null, "Nome da empresa exedeu o limite de 60 caracteres\nFavor abreviar o nome!", "ERRO", JOptionPane.ERROR_MESSAGE);
            nomeText.requestFocusInWindow();
        }
    }//GEN-LAST:event_nomeTextFocusLost

    private void ufNameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ufNameTextFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_ufNameTextFocusGained

    private void ufNameTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ufNameTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_ufNameTextFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroCidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            CadastroCidade dialog = new CadastroCidade(new javax.swing.JFrame(), true, "");
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancelar;
    private javax.swing.JButton buttonSalvar;
    private javax.swing.JFormattedTextField codigoCidadeText;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField nomeText;
    private javax.swing.JTextField ufNameText;
    // End of variables declaration//GEN-END:variables

    
        
       
    private void salvarCidade() {
        try {
            HttpPost post = new HttpPost(URL_CIDADE);
            Cidade empresa = criaCidade();
            String jsonEnvio = Util.objectToJson(empresa);
            post.setEntity(new StringEntity(jsonEnvio));
            String jsonResposta = Util.enviaRequest(post);
            Optional retorno = Optional.ofNullable(Util.jsonToObject(jsonResposta, Cidade.class));
            if (!retorno.isPresent()) {
                JOptionPane.showMessageDialog(null, "Erro ao salvar registro!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, "Registro salvo com sucesso!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                dispose();
            }
            
        } catch (IOException | HttpException | NoSuchPaddingException | IllegalBlockSizeException | NoSuchAlgorithmException | BadPaddingException | InvalidKeyException ex) {
            Logger.getLogger(CadastroCidade.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

    private Cidade criaCidade() {
        Cidade cidade = new Cidade();
        
        if(!codigoCidadeText.getText().trim().isEmpty()){
            cidade.setIdCidade(Integer.parseInt(codigoCidadeText.getText().trim()));
        }
        
        cidade.setNomeCidade(nomeText.getText().trim().toUpperCase());
        cidade.setUfEstado(ufNameText.getText().trim().toUpperCase());
        
        return cidade; 
    }

    public void enviarCodigoSelecionado(String id) {
        try {
            String URL_PESQ = URL_CIDADE + "/" + id;
            HttpGet get = new HttpGet(URL_PESQ);
            String resposta = Util.enviaRequest(get);
            Optional retorno = Optional.ofNullable(Util.jsonToObject(resposta, Cidade.class));
            if (retorno.isPresent()) {
                Cidade cliente = (Cidade) retorno.get();
                
                codigoCidadeText.setText(String.valueOf(cliente.getIdCidade()));
                nomeText.setText(cliente.getNomeCidade());
                ufNameText.setText(cliente.getUfEstado());
                
            } 

        } catch (IOException | HttpException | NoSuchPaddingException | IllegalBlockSizeException | NoSuchAlgorithmException | BadPaddingException | InvalidKeyException ex) {
            Logger.getLogger(CadastroCidade.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

}
